name: 🔧 Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run weekly dependency audit
    - cron: '0 2 * * 1'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # 🧪 Test suite on Unix systems only
  test:
    name: 🧪 Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable]

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🦀 Setup Rust toolchain (${{ matrix.rust }})
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: 📦 Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-${{ matrix.rust }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.rust }}-cargo-registry-

      - name: 📦 Cache Cargo build
        uses: actions/cache@v4
        with:
          path: target/
          key: ${{ runner.os }}-${{ matrix.rust }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.rust }}-cargo-build-

      - name: 🔧 Build project
        run: cargo build --verbose

      - name: 🧪 Run tests
        run: cargo test --verbose

      - name: 🧪 Run doc tests
        run: cargo test --doc


  # 🛡️ Security audit
  security:
    name: 🛡️ Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🦀 Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: 🔧 Install cargo-audit
        uses: taiki-e/install-action@cargo-audit

      - name: 🛡️ Run security audit
        run: cargo audit --ignore RUSTSEC-2024-0320 --ignore RUSTSEC-2024-0436

  # 🚀 Build artifacts (on success)
  build:
    name: 🚀 Build Release
    runs-on: ${{ matrix.os }}
    needs: [test, security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: git-lineage
            asset_name: git-lineage-linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: git-lineage
            asset_name: git-lineage-macos-x86_64

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🦀 Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: 📦 Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: 📦 Cache Cargo build
        uses: actions/cache@v4
        with:
          path: target/
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}

      - name: 🚀 Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}